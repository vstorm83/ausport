<script type="text/javascript">
//<![CDATA[
OptionTemplateSelect = '<table class="border" cellpadding="0" cellspacing="0">'+
        '<input type="hidden" class="required-option-select-type-rows" name="validation_{{option_id}}_result" value="" >'+
		'<thead>'+
		'<tr class="headings">'+
			'<th class="type-last last" colspan="4"><?php echo Mage::helper('formbuilder')->__('Class') ?> </th>'+
		'</tr>'+
		'</thead>'+
		'<tr>'+
		'<td class="type-last last" colspan="4"><input style="width:90% !important;" type="text" class="input-text" name="product[options][{{fieldset}}][{{option_id}}][class]" value="{{class}}"></td>'+
		'</tr>'+
        '<thead>'+
        '<tr class="headings">'+
            '<th class="type-title"><?php echo Mage::helper('formbuilder')->__('Title') ?> <span class="required">*</span></th>'+
            <?php /*'<th class="type-sku"><?php echo Mage::helper('formbuilder')->__('Code') ?></th>'+*/?>
            '<th class="type-order"><?php echo Mage::helper('formbuilder')->__('Sort Order') ?></th>'+
			'<th class="type-default"><?php echo Mage::helper('formbuilder')->__('Default') ?></th>'+
            '<th class="type-butt last">&nbsp;</th>'+
        '</tr>'+
        '</thead>'+
        '<tbody id="select_option_type_row_{{fieldset}}_{{option_id}}">'+
        '</tbody>'+
        '<tfoot>'+
        '<tr>'+
        '<td colspan="100" class="a-right"><?php echo $this->getAddButtonHtml() ?></td>'+
        '</tr>'+
        '</tfoot>'+
    '</table>';

OptionTemplateSelectRow = '<tr id="product_option_{{fieldset}}_{{id}}_select_{{select_id}}">'+
            '<td>'+
            '<input type="hidden" name="product[options][{{fieldset}}][{{id}}][values][{{select_id}}][option_type_id]" value="{{option_type_id}}">'+
            '<input type="hidden" id="product_option_{{fieldset}}_{{id}}_select_{{select_id}}_is_delete" name="product[options][{{fieldset}}][{{id}}][values][{{select_id}}][is_delete]" value="">'+
            '<input type="text" class="required-entry input-text select-type-title" id="product_option_{{id}}_select_{{select_id}}_title" name="product[options][{{fieldset}}][{{id}}][values][{{select_id}}][title]" value="{{title}}">{{checkboxScopeTitle}}</td>'+
           <?php /* '<td><input type="text" class="input-text" name="product[options][{{fieldset}}][{{id}}][values][{{select_id}}][sku]" value="{{sku}}"></td>'+*/?>
            '<td><input type="text" class="validate-zero-or-greater input-text" name="product[options][{{fieldset}}][{{id}}][values][{{select_id}}][sort_order]" value="{{sort_order}}"></td>'+
			'<td><input id="product_option_{{fieldset}}_{{id}}_select_{{select_id}}_default" type="{{default_type}}" class="input-text" name="product[options][{{fieldset}}][{{id}}][values][default][]" value="{{select_id}}" {{checked}} onclick="if (this.up().hasClassName(\'checked\') && this.checked) this.checked=false; if (this.checked) this.up().addClassName(\'checked\'); else this.up().removeClassName(\'checked\');" onmouseover="if (this.checked) this.up().addClassName(\'checked\'); else this.up().removeClassName(\'checked\');"></td>'+ 
            '<td class="last"><span title="Delete row"><?php echo $this->getDeleteButtonHtml() ?></span></td>'+
        '</tr>';

selectOptionType = {
    div : 'select_option_type_row',
    itemCount : 0,
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : OptionTemplateSelectRow,
    add : function(data) {
		//alert( this.templateText);
        this.template = new Template(this.templateText, this.templateSyntax);
		//alert(data);
        if (data.target || data.srcElement) {//data is Event (work in IE and Firefox)
            element = $(Event.findElement(data, 'button'));
            optionId = element.readAttribute('id').sub('add_select_row_button_', '');
            data = {};
            data.option_type_id = '-1';
            data.select_id = this.itemCount;
        } else {
            optionId = data.option_id;
            data.select_id = data.option_type_id;
            this.itemCount = data.item_count;
        }
		
		var temp=new Array();
		temp=optionId.split("_"); 
		if(temp[1])
		{
			data.id  = temp[1];
			data.fieldset=temp[0];
		}else{
		//alert(optionId.sub('_'),'');
        data.id  = optionId;
		}
		if (!data.default_type) {
				//alert(data.id);
                var inputType = $("product_option_" + data.id + "_type");
                switch (inputType.value) {
                    case 'drop_down':
                    case 'radio':
                        data.default_type = 'radio';
                        break;
                    case 'checkbox':
                    case 'multiple':
                        data.default_type = 'checkbox';
                        break;
                }
            }
		//alert(data.fieldset);
        Element.insert($(this.div+'_'+optionId), {'bottom':this.template.evaluate(data)});

        if (data.checkboxScopeTitle) {
            //set disabled
            if ($('product_option_'+data.id+'_select_'+data.select_id+'_title') && data.scopeTitleDisabled) {
                $('product_option_'+data.id+'_select_'+data.select_id+'_title').disable();
            }
        }
        if (data.checkboxScopePrice) {
            //set disabled
            if ($('product_option_'+data.id+'_select_'+data.select_id+'_price') && data.scopePriceDisabled) {
                $('product_option_'+data.id+'_select_'+data.select_id+'_price').disable();
                $('product_option_'+data.id+'_select_'+data.select_id+'_price_type').disable();
            }
        }
		
        if (data.price_type) {
            $A($('product_option_'+data.id+'_select_'+data.select_id+'_price_type').options).each(function(option){
                if (option.value==data.price_type) option.selected = true;
            });
        }

        this.itemCount++;
        this.bindRemoveButtons();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr'));

        if(element){
			//alert(element.readAttribute('id'));
            $(element.readAttribute('id')+'_is_delete').value = '1';
            element.addClassName('no-display');
            element.addClassName('ignore-validate');
            element.hide();
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('.delete-select-row');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
    },
    bindAddButton : function()
    {
	
        var buttons = $$('.add-select-row');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.add.bind(this));
            }
        }
    }
}

if ($('option_panel_type_select')) {
    $('option_panel_type_select').remove();
}

selectOptionType.bindRemoveButtons();

Validation.addAllThese([
    ['required-option-select-type-rows', <?php echo $this->helper('core')->jsonEncode(Mage::helper('catalog')->__('Please add rows to option.')); ?>, function(v, elm) {
            var optionContainerElm = elm.up('div.grid');
            var selectTypesFlag = false;
            selectTypeElements = $$('#'+optionContainerElm.id+' .select-type-title');
            selectTypeElements.each(function(elm){
                if (elm.id && elm.up('tr').visible()) {
                    selectTypesFlag = true;
                }
            });
            elm.advaiceContainer = optionContainerElm.id+'_advice';
        return selectTypesFlag;
}]]);

if($('add_select_row_button')){
    Event.observe('add_select_row_button', 'click', selectOptionType.add.bind(selectOptionType));
}
//]]>
</script>
